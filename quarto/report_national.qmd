---
params:
  df: ""
  shp: ""
  country_name: ""
  year: ""
  
execute:
  echo: false #show/hide code output
  warning: false #suppress warnings
  message: false #suppress messages
  output: true #include output of code chunks
  cache: false
  freeze: false
  
format:
  pdf: 
    fig-width: 10
    fig-height: 8
    fig-align: "center"
    geometry: 
      - margin = 0.5in
      - bottom = 1.3in
      - top = 0.5in
mainfont: Lato

header-includes:
  - \input{_extensions/styles.tex}
  
knitr:
  opts_chunk:
    dpi: 200
    dev: "png"
---

```{r setup, include = FALSE}
#load all packages
library(IPCpoputils)
library(jsonlite)
library(dplyr)
library(knitr)
library(popreports)
library(ggplot2)
library(png)
library(ggpubr)
library(patchwork)
library(geojsonsf)
library(jpeg)
library(grid)
library(sf)
library(tidyverse)
library(showtext); showtext_auto()
library(gridtext)
library(gridExtra)
```

```{r}
#load all necessary data
df <- fromJSON(params$df,simplifyDataFrame = TRUE)
levels <- unique(df$AGE_CAT)
df$AGE_CAT <- factor(df$AGE_CAT,levels=levels)
shape_file <- geojson_sf(params$shp)
```

```{r}
# manipulate data to the provided parameters
#filters data for year
if (params$year %in% unique(df$YR) & 0 %in% unique(df$ADM_LEVEL)){
  df_filtered <- df %>% filter(YR == params$year & ADM_LEVEL == 0 & SEX!='B')
} else{
  stop("ERROR: either your adm_level given or your year does not exist or your adm_name doesn't exist")
}
```

```{r,fig.height = 1}
#Title Text/Plot
title_text <- ggplot() +
                theme_void() +
                labs(title = paste0(params$country_name, "'s Demographics in ", params$year),
                     subtitle = "National Report") +
                theme(
                  plot.title = element_text(size = 26, color = "#54278F", face = "bold", family = "Lato"),
                  plot.subtitle = element_text(size = 22, color = "#756BB1", family = "Lato")                
                  )
  
title_shp_file <- ggplot() +
                    geom_sf(data = shape_file,fill="white",color="black") +
                    theme_void()

grid.arrange(title_text,title_shp_file,nrow=1, widths = c(3,1))
```

```{r}
# Add a blurb at the top of the report to describe important, key statistics

blurb_result <- generate_blurb(df_filtered)

if (!is.null(blurb_result)) {
  total_pop <- blurb_result[1]
  percent_male <- blurb_result[2]
  percent_female <- blurb_result[3]
  total_less5 <- blurb_result[4]
  total_working <- blurb_result[5]
}
```
**Summary**

In `r params$year`, Tanzania's was `r total_pop`. In the demographic composition, males accounted for `r percent_male`% of the population and females `r percent_female`%. The country had a young population of `r total_less5` children under the age of 5. Meanwhile, the working-age adult population, a key driver of the nation's economy, numbered `r total_working`.


```{r}
#national population pyramid, pre-filtering data
pop_pyr <- plot_pyr(df_filtered, params$country_name, '5') +
            plot_annotation(
              subtitle = "Population Pyramid",
              theme = theme(plot.subtitle = element_text(size = 22, color = "#756BB1", face = "bold", family = "Lato"))
            )
pop_pyr
```

Caption/Description: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
